import 'package:flutter/material.dart';
import '../../theme/app_theme.dart';

class KeyInsectsScreen extends StatelessWidget {
  KeyInsectsScreen({super.key});

  final List<Map<String, dynamic>> keyInsects = [
    {
      'name': 'Gusano Cogollero',
      'scientificName': 'Spodoptera frugiperda',
      'crops': ['Ma√≠z', 'Sorgo', 'Algod√≥n'],
      'importance': 'Plaga principal en cultivos de ma√≠z en Am√©rica Latina. Puede causar p√©rdidas de hasta el 70% en la producci√≥n.',
      'control': '‚Ä¢ Control biol√≥gico con parasitoides\n‚Ä¢ Manejo cultural\n‚Ä¢ ARN interferente espec√≠fico\n‚Ä¢ Monitoreo temprano',
      'icon': Icons.pest_control,
      'emoji': 'üêõ',
    },
    {
      'name': 'Broca del Caf√©',
      'scientificName': 'Hypothenemus hampei',
      'crops': ['Caf√©'],
      'importance': 'Principal plaga del caf√© a nivel mundial. Afecta directamente la calidad y rendimiento del grano.',
      'control': '‚Ä¢ Control biol√≥gico con hongos\n‚Ä¢ Trampas con feromonas\n‚Ä¢ Manejo integrado\n‚Ä¢ Control cultural',
      'icon': Icons.coffee,
      'emoji': 'ü™≤',
    },
    {
      'name': 'Polilla del Tomate',
      'scientificName': 'Tuta absoluta',
      'crops': ['Tomate', 'Papa', 'Berenjena'],
      'importance': 'Causa da√±os severos en cultivos de solan√°ceas. Puede reducir el rendimiento hasta en un 80-100%.',
      'control': '‚Ä¢ Control biol√≥gico\n‚Ä¢ Monitoreo con feromonas\n‚Ä¢ Manejo cultural\n‚Ä¢ Rotaci√≥n de cultivos',
      'icon': Icons.bug_report,
      'emoji': 'ü¶ã',
    },
    {
      'name': 'Mosca de la Fruta',
      'scientificName': 'Ceratitis capitata',
      'crops': ['C√≠tricos', 'Mango', 'Guayaba', 'Durazno'],
      'importance': 'Plaga cuarentenaria que afecta a una amplia variedad de frutas. Impacta el comercio internacional.',
      'control': '‚Ä¢ Trampas con atrayentes\n‚Ä¢ Control biol√≥gico\n‚Ä¢ Manejo de residuos\n‚Ä¢ Tratamiento en fr√≠o',
      'icon': Icons.pest_control,
      'emoji': 'ü™∞',
    },
    {
      'name': 'Picudo del Algod√≥n',
      'scientificName': 'Anthonomus grandis',
      'crops': ['Algod√≥n'],
      'importance': 'Una de las plagas m√°s destructivas del algod√≥n. Puede causar p√©rdidas totales si no se controla.',
      'control': '‚Ä¢ Monitoreo con feromonas\n‚Ä¢ Control cultural\n‚Ä¢ Destrucci√≥n de rastrojos\n‚Ä¢ Control qu√≠mico selectivo',
      'icon': Icons.bug_report,
      'emoji': 'ü™≤',
    },
    {
      'name': 'Trips de las Flores',
      'scientificName': 'Frankliniella occidentalis',
      'crops': ['Flores', 'Hortalizas', 'Frutales'],
      'importance': 'Vector de virus importantes. Afecta la calidad est√©tica y comercial de flores y frutos.',
      'control': '‚Ä¢ Control biol√≥gico con √°caros\n‚Ä¢ Manejo del riego\n‚Ä¢ Trampas crom√°ticas\n‚Ä¢ Eliminaci√≥n de malezas',
      'icon': Icons.local_florist,
      'emoji': 'üêú',
    },
    {
      'name': 'Gusano Barrenador',
      'scientificName': 'Diatraea saccharalis',
      'crops': ['Ca√±a de Az√∫car', 'Ma√≠z', 'Sorgo'],
      'importance': 'Causa p√©rdidas significativas en cultivos de ca√±a. Afecta el contenido de az√∫car y el rendimiento.',
      'control': '‚Ä¢ Control biol√≥gico\n‚Ä¢ Variedades resistentes\n‚Ä¢ Manejo de socas\n‚Ä¢ Liberaci√≥n de parasitoides',
      'icon': Icons.pest_control,
      'emoji': 'üêõ',
    },
  ];

  @override
  Widget build(BuildContext context) {
    final cardBackground = const Color(0xFF317B22);
    final customGreen = const Color(0xFF67E0A3);
    
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Insectos Clave en Agricultura',
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: AppTheme.calPolyGreen,
        elevation: 0,
      ),
      body: ListView.builder(
        padding: const EdgeInsets.all(16),
        itemCount: keyInsects.length,
        itemBuilder: (context, index) {
          final insect = keyInsects[index];
          return Card(
            margin: const EdgeInsets.only(bottom: 16),
            elevation: 2,
            color: cardBackground,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(12),
            ),
            child: Theme(
              data: Theme.of(context).copyWith(
                dividerColor: Colors.transparent,
                colorScheme: ColorScheme.dark(
                  primary: Colors.white,
                ),
              ),
              child: ExpansionTile(
                leading: Container(
                  width: 48,
                  height: 48,
                  decoration: BoxDecoration(
                    color: Colors.white.withOpacity(0.15),
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Center(
                    child: Text(
                      insect['emoji'] as String,
                      style: const TextStyle(fontSize: 24),
                    ),
                  ),
                ),
                title: Text(
                  insect['name'] as String,
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.w600,
                    color: Colors.white,
                  ),
                ),
                subtitle: Text(
                  insect['scientificName'] as String,
                  style: TextStyle(
                    fontSize: 14,
                    fontStyle: FontStyle.italic,
                    color: Colors.white.withOpacity(0.7),
                  ),
                ),
                children: [
                  Container(
                    padding: const EdgeInsets.all(16),
                    decoration: BoxDecoration(
                      color: Colors.white.withOpacity(0.05),
                      borderRadius: const BorderRadius.vertical(
                        bottom: Radius.circular(12),
                      ),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildInfoSection(
                          'Cultivos Afectados',
                          (insect['crops'] as List<String>).join(', '),
                          Icons.agriculture,
                          Colors.white,
                          cardBackground,
                        ),
                        const SizedBox(height: 16),
                        _buildInfoSection(
                          'Importancia',
                          insect['importance'] as String,
                          Icons.warning_amber,
                          Colors.white,
                          cardBackground,
                        ),
                        const SizedBox(height: 16),
                        _buildInfoSection(
                          'M√©todos de Control',
                          insect['control'] as String,
                          Icons.security,
                          Colors.white,
                          cardBackground,
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }

  Widget _buildInfoSection(String title, String content, IconData icon, Color textColor, Color backgroundColor) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Container(
          padding: const EdgeInsets.all(8),
          decoration: BoxDecoration(
            color: Colors.white.withOpacity(0.15),
            borderRadius: BorderRadius.circular(8),
          ),
          child: Icon(
            icon,
            size: 20,
            color: Colors.white,
          ),
        ),
        const SizedBox(width: 12),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                title,
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.w600,
                  color: textColor,
                ),
              ),
              const SizedBox(height: 4),
              Text(
                content,
                style: TextStyle(
                  fontSize: 15,
                  height: 1.5,
                  color: textColor.withOpacity(0.9),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}
